<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" xmlns:Chromes="clr-namespace:Xceed.Wpf.Toolkit.Chromes;assembly=WPFToolkit.Extended"
             xmlns:CollectionManager="clr-namespace:MapMakerApplication.Controllers.CollectionManager"
             x:Class="MapMakerApplication.Controllers.ColorEditor" 
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="600"
            DataContext="{Binding Source={StaticResource Locator},Path=Sdk.CollectionAreaColorSelected,Mode=OneWay}"
    >
    <UserControl.Resources>
        <Style x:Key="vis">
            <Setter Property="Control.Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding ElementName=ComboBoxType,Path=SelectedIndex}" Value="2"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Control.Visibility" Value="Visible"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="visTotal">
            <Setter Property="Control.Visibility" Value="Hidden"/>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding ElementName=ComboBoxType,Path=SelectedIndex}" Value="2"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Control.Visibility" Value="Visible"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding ElementName=ComboBoxType,Path=SelectedIndex}" Value="6"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Control.Visibility" Value="Visible"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="visWater">
            <Setter Property="Control.Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding ElementName=ComboBoxType,Path=SelectedIndex}" Value="6"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Control.Visibility" Value="Visible"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid DataContext="{Binding}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="392*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="5"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <TextBlock TextWrapping="Wrap" Grid.Row="1"><Run Language="it-it" Text="Name"/><LineBreak/><Run Language="it-it"/></TextBlock>
        <TextBlock Grid.Row="2" TextWrapping="Wrap"><Run Language="it-it" Text="Index"/></TextBlock>
        <TextBlock Grid.Row="3" TextWrapping="Wrap"><Run Language="it-it" Text="Texture Index"/></TextBlock>
        <TextBlock Grid.Row="4" TextWrapping="Wrap"><Run Language="it-it" Text="Max"/></TextBlock>
        <TextBlock Grid.Row="4" TextWrapping="Wrap" Grid.Column="2" RenderTransformOrigin="0.5,0.5"><Run Language="it-it" Text="Min"/></TextBlock>
        <TextBox Grid.ColumnSpan="3" Grid.Row="1" TextWrapping="Wrap" Text="{Binding Name,UpdateSourceTrigger=PropertyChanged}" Grid.Column="1"/>
        <ComboBox Grid.ColumnSpan="3" Grid.Row="3" ItemsSource="{Binding Source={StaticResource Locator},Path=Sdk.TextureIds,UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding TextureIndex}" Grid.Column="1"/>


        <xctk:IntegerUpDown Grid.Row="2" Value="{Binding Source={StaticResource Locator},Path=Sdk.CollectionAreaColorSelected.Index}" Minimum="0" Grid.Column="1"/>
        <xctk:IntegerUpDown Grid.Row="4" Value="{Binding Max}" Grid.Column="1" Name="Max" Maximum="127"/>
        <xctk:IntegerUpDown Grid.Column="3" Grid.Row="4" Value="{Binding Min}" Minimum="-128" Name="Min"/>
        <TextBlock Grid.Row="5" TextWrapping="Wrap" Text="Type"/>
        <ComboBox Name="ComboBoxType" Grid.ColumnSpan="3" Grid.Row="5" SelectedItem="{Binding Type,UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={StaticResource ObjectProviderAreaColorTypes}}" Grid.Column="1"/>
        <TextBlock Grid.Row="6" TextWrapping="Wrap"><Run Language="it-it" Text="Color"/></TextBlock>
                <xctk:ColorPicker SelectedColor="{Binding Color,UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="6" />
        <TextBlock Grid.Column="2" Grid.Row="6" TextWrapping="Wrap" Text="{Binding Color}" Grid.ColumnSpan="2" >
            <TextBlock.Background>
                <SolidColorBrush Color="{Binding Color}"/>
            </TextBlock.Background>
        </TextBlock>
        
        
        
        <TabControl Grid.Row="8" Grid.ColumnSpan="4" Grid.RowSpan="2" Background="{x:Null}" Style="{StaticResource visTotal}">
            <TabItem Header="Grown Options" Style="{StaticResource vis}">
				<Grid Style="{StaticResource vis}">
        	   		<Grid.ColumnDefinitions>
        	   			<ColumnDefinition Width="Auto"/>
        	   			<ColumnDefinition Width="5"/>
        	   			<ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="5"/>
						<ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
        	   		<Grid.RowDefinitions>
        	   			<RowDefinition Height="20"/>
						<RowDefinition Height="5"/>
        	   			<RowDefinition Height="20"/>
						<RowDefinition Height="5"/>
        	   			<RowDefinition Height="20"/>
        	   			<RowDefinition Height="5"/>
        	   			<RowDefinition Height="*"/>
        	   		</Grid.RowDefinitions>
                    <TextBlock Grid.Row="2" Grid.Column="0" TextWrapping="Wrap" ><Run Language="it-it" Text="Index Top"/></TextBlock>
                    <CheckBox Content="Auto Grown" IsChecked="{Binding ModeAutomatic}" />
                    <TextBlock TextWrapping="Wrap" Grid.Column="1" Text="{Binding ColorTopMountain}" Grid.Row="2" Margin="5,0,0,0" d:LayoutOverrides="GridBox, HorizontalMargin">
                        <TextBlock.Background>
                            <SolidColorBrush Color="{Binding ColorTopMountain}"/>
                        </TextBlock.Background>
                    </TextBlock>
            <CollectionManager:CollectionManager Style="{StaticResource ListViewCircles}" Grid.ColumnSpan="8" Grid.Row="6" 
                                                 ItemsSource="{Binding Path=List}"
                                                 SelectedItem="{Binding Source={StaticResource Locator},Path=Sdk.SelectedGrownCircle, Mode=TwoWay}"
                                                 SelectedIndex="{Binding Source={StaticResource Locator},Path= Sdk.IndexGrownCircle}"
                                                 CommandAdd="{Binding Source={StaticResource Locator},Path=Sdk.CommandAddGrownCircle}"
                                                 CommandRemove="{Binding Source={StaticResource Locator},Path=Sdk.CommmandRemoveGrownCircle}"
                                                 CommandMoveUp="{Binding Source={StaticResource Locator}, Path=Sdk.CommandMoveUpGrownCircle}"
                                                 CommandMoveDown="{Binding Source={StaticResource Locator}, Path=Sdk.CommandMoveDownGrownCircle}"
                                                 />
            <TextBlock Grid.Column="5" Grid.Row="2" TextWrapping="Wrap" Text="{Binding Path=IndexColorTopMountain}" Margin="5,0,0,0" d:LayoutOverrides="GridBox, HorizontalMargin" />
                    <TextBlock Grid.Column="4" Grid.Row="2" Text="Index Top Color" />
                </Grid>
			   </TabItem>
            <TabItem Header="Water Coast Options" Style="{StaticResource visWater}">
                <Grid Style="{StaticResource visWater}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="20" />
                        <RowDefinition Height="5" />
                        <RowDefinition Height="20" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <TextBlock Text="Static Items Height" Grid.Row="1" Grid.Column="1"/>
                    <xctk:IntegerUpDown Value="{Binding Path=ItemsAltitude}" Maximum="127" Minimum="-128" Grid.Column="3" Grid.Row="1"/>
                </Grid>
            </TabItem>
		</TabControl>
    </Grid>
</UserControl>
